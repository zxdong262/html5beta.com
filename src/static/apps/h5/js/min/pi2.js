$(document).ready(function () { function e () { var e = $('body').width(); var t = $('body').height(); if (o('body width: ' + e + ', height: ' + t), m) { const r = m.wrapper; var e = parseInt(r.width(), 10); var t = parseInt(r.height(), 10); r.prop({ width: e, height: t }), m.width = e, m.height = t, m.init() } } function t () { const t = $('body'); const r = t.width(); const n = t.height(); (c !== r || f !== n) && (e(), c = r, f = n) } function r (e, t) { let r; const n = function () { e(), r = setTimeout(n, t) }; r = setTimeout(n, t) } function n () { const e = encodeURIComponent(location.href); const t = encodeURIComponent(document.title); $('.post-share .social a').each(function () { const r = $(this); const n = r.prop('href').replace('##', t).replace('#', e); r.prop('href', n) }) } function a () { const e = $('body').hasClass('home') || $('body').hasClass('tag'); const t = $(e ? 'h1, #footer-widgets h3, .post-title h2' : 'h1, #footer-widgets h3, h2'); let r = '<div id="sidenav"><div id="sidenav-inner"><ul>'; t.each(function (e, t) { const n = $(this); n.before('<a href="#" name="nav-' + e + '"></a>'), r += '<li><a href="#nav-' + e + '">' + n.text() + '</a></li>' }), $('#header a').prop('name', 'top'), $('body').append(r + '</ul><p><a href="#top">&uarr;top</a></p></div></div>'), i(), $('#sidenav').hover(function () { $(this).addClass('hover'), i() }, function () { $(this).removeClass('hover'), $('#sidenav').removeClass('scroll') }) } function i () { const e = 0.9 * $(window).height(); sn = $('#sidenav-inner').height(), sn > e ? $('#sidenav').addClass('scroll') : $('#sidenav').removeClass('scroll') } function o (e) { $('#debug').prepend('<p>' + e + '</p>'), $('#debug').children().size() > 2 && $('#debug').children().last().remove() } function s () { $('#wrapper').slideUp(500, function () { $('body').append($('#iewarn').html()) }) } var l = !1; const u = $('#cbg')[0]; const h = u.getContext ? !0 : !1; var l = 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch; var c = $('body').width(); var f = $('body').height(); if (o('support canvas: ' + h), $('body').hasClass('lt-ie9')) return s(), !1; e(), r(t, 1500), $('.post-share').length && n(), l || $('#no-sidenav').length || a(); const d = $('pre'); const g = $('code'); const p = l ? '' : 'contentEditable="true"'; if (d.each(function () { const e = $(this); const t = e.html().replace(/\\t/g, '    '); console.log($(this).html().indexOf('	')), e.html(t), e.addClass('prettyprint lang-' + e.prop('lang')).wrapInner('<code ' + p + ' />') }), g.each(function () { const e = $(this); e.addClass('prettyprint lang-' + e.prop('lang')) }), prettyPrint(), h && ($('#debug').before('<div class="pdtb aligncenter" id="qr"></div>'), $('#qr').qrcode({ width: 128, height: 128, text: window.location.href })), o('touch device:' + l), !h || l || $('#no-bubble').length)$('#footer .exp').hide(); else { var m = new Bubbles({}, $('#cbg')); window.bubbleInst = m, $(window).on('resize', function () { const e = m.wrapper; const t = parseInt(e.width(), 10); const r = parseInt(e.height(), 10); e.prop({ width: t, height: r }), m.width = t, m.height = r, m.init() }), $('#footer .addBubble').click(function () { m.num++, m.initShape() }), $('#footer .stop').click(function () { const e = $(this); e.hasClass('off') ? (e.removeClass('off').text('Stop it'), m.on = !0) : (e.addClass('off').text('Continue'), m.clearShapes(), m.on = !1) }), $('#footer .faster').click(function () { m.step++, m.step > 100 && (m.step = 100) }), $('#footer .fish').click(function () { const e = $(this); e.hasClass('on') ? (m.isHeart = !1, e.removeClass('on'), e.text('I am ?')) : (m.isHeart = !0, e.addClass('on'), e.text('I am not ?')) }) } }), window.ht = {}, ht.alert = function (e, t, r) { r.html('<div class="relative pd tip-' + t + '"><div class="relative">' + e + '</div><a href="javascript" class="close-tip">&times;</a></div>') }, (function () { Bubbles = function (e, t) { const r = { colorPool: ['rgba(156,183,52,.25)', 'rgba(227,163,26,.25)', 'rgba(217,84,56,.25)', 'rgba(4,80,150,.25)', 'rgba(122,24,105,.25)'], num: 20, isHeart: !1, timer: 100, step: 3, minSize: 50, maxSize: 150, maxFrame: 230 }; let n = this; n = $.extend(n, $.extend(r, e)), n = $.extend(n, { wrapper: t, ctx: t[0].getContext('2d'), width: t.width(), height: t.height(), shapes: [], on: !0, flag: null, inited: !1 }), n.init() }, Bubbles.prototype = { init: function () { const e = this; num = e.num, wr = e.wrapper, wr.prop({ width: parseInt(e.width, 10), height: parseInt(e.height, 10) }), e.inited = !0, e.clearShapes(), e.shapes = []; for (let t = 0; t < num; t++)e.initShape(); e.flag && clearTimeout(e.flag), e.animateShapes() }, clearShapes: function () { const e = this; e.ctx.clearRect(0, 0, e.width, e.height) }, initShape: function () { const e = this; const t = Math.floor(Math.random() * (e.maxSize - e.minSize)) + e.minSize; const r = 2 * t; const n = e.width > r ? e.width : r + 1; const a = e.height > r ? e.height : r + 1; const i = t + Math.floor(Math.random() * (n - r)); const o = t + Math.floor(Math.random() * (a - r)); const s = e.colorPool; const l = Math.floor(Math.random() * s.length); const u = s[l]; const h = Math.random() > 0.5 ? !0 : !1; const c = Math.random() > 0.5 ? !0 : !1; const f = { x: i, y: o, r: t, fillStyle: u, stepCount: e.maxFrame, plusX: h, plusY: c }; e.shapes.push(f) }, drawShape: function (e, t, r, n, a) { const i = this; if (ctx = i.ctx, i.on) if (a) { ctx.beginPath(), ctx.fillStyle = 'rgba(207,13,31,.25)'; const o = 2 * r / 150; ctx.moveTo(e - r + 75 * o, t - r + 40 * o), ctx.bezierCurveTo(e - r + 75 * o, t - r + 37 * o, e - r + 70 * o, t - r + 25 * o, e - r + 50 * o, t - r + 25 * o), ctx.bezierCurveTo(e - r + 20 * o, t - r + 25 * o, e - r + 20 * o, t - r + 62.5 * o, e - r + 20 * o, t - r + 62.5 * o), ctx.bezierCurveTo(e - r + 20 * o, t - r + 80 * o, e - r + 40 * o, t - r + 102 * o, e - r + 75 * o, t - r + 120 * o), ctx.bezierCurveTo(e - r + 110 * o, t - r + 102 * o, e - r + 130 * o, t - r + 80 * o, e - r + 130 * o, t - r + 62.5 * o), ctx.bezierCurveTo(e - r + 130 * o, t - r + 62.5 * o, e - r + 130 * o, t - r + 25 * o, e - r + 100 * o, t - r + 25 * o), ctx.bezierCurveTo(e - r + 85 * o, t - r + 25 * o, e - r + 75 * o, t - r + 37 * o, e - r + 75 * o, t - r + 40 * o), ctx.fill(), ctx.closePath() } else ctx.beginPath(), ctx.fillStyle = n, ctx.arc(e, t, r, 0, 2 * Math.PI, !0), ctx.fill(), ctx.closePath() }, animateShapes: function () { const e = this; const t = e.num; const r = e.step; const n = e.shapes; e.on || (e.flag = e.flag = setTimeout(function () { e.animateShapes }, e.timer)), e.clearShapes(); for (let a = 0; t > a; a++) { const i = n[a]; const o = i.r; let s = i.stepCount + 1; var l = i.plusX; var u = i.plusY; const h = i.fillStyle; if (s >= e.maxFrame) { var l = Math.random() > 0.5 ? !0 : !1; var u = Math.random() > 0.5 ? !0 : !1; s = 0 } let c = l ? i.x + r : i.x - r; c > e.width - o && (c -= 2 * r, l = !i.plusX), o > c && (c += 2 * r, l = !i.plusX); let f = u ? i.y + r : i.y - r; f > e.height - o && (f -= 2 * r, u = !i.plusY), o > f && (f += 2 * r, u = !i.plusY); const d = { x: c, y: f, r: o, fillStyle: h, stepCount: s, plusX: l, plusY: u }; n[a] = d, e.drawShape(c, f, o, h, e.isHeart), a === t - 1 && (e.flag = setTimeout(function () { e.animateShapes() }, e.timer)) } }, destroy: function () { clearTimeout(this.flag), this.wrapper.off('resize', '**'), this.delete } }, this.Bubbles = Bubbles }.call(this)); const IN_GLOBAL_SCOPE = !0; window.PR_SHOULD_USE_CONTINUATION = !0; let prettyPrintOne, prettyPrint; !(function () { function e (e) { function t (e) { let t = e.charCodeAt(0); if (t !== 92) return t; const r = e.charAt(1); return t = c[r], t || (r >= '0' && r <= '7' ? parseInt(e.substring(1), 8) : r === 'u' || r === 'x' ? parseInt(e.substring(2), 16) : e.charCodeAt(1)) } function r (e) { if (e < 32) return (e < 16 ? '\\x0' : '\\x') + e.toString(16); const t = String.fromCharCode(e); return t === '\\' || t === '-' || t === ']' || t === '^' ? '\\' + t : t } function n (e) { const n = e.substring(1, e.length - 1).match(new RegExp('\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]', 'g')); const a = []; const i = n[0] === '^'; const o = ['[']; i && o.push('^'); for (var s = i ? 1 : 0, l = n.length; l > s; ++s) { const u = n[s]; if (/\\[bdsw]/i.test(u))o.push(u); else { var h; const c = t(u); l > s + 2 && n[s + 1] === '-' ? (h = t(n[s + 2]), s += 2) : h = c, a.push([c, h]), h < 65 || c > 122 || (h < 65 || c > 90 || a.push([32 | Math.max(65, c), 32 | Math.min(h, 90)]), h < 97 || c > 122 || a.push([-33 & Math.max(97, c), -33 & Math.min(h, 122)])) } }a.sort(function (e, t) { return e[0] - t[0] || t[1] - e[1] }); for (var f = [], d = [], s = 0; s < a.length; ++s) { var g = a[s]; g[0] <= d[1] + 1 ? d[1] = Math.max(d[1], g[1]) : f.push(d = g) } for (var s = 0; s < f.length; ++s) { var g = f[s]; o.push(r(g[0])), g[1] > g[0] && (g[1] + 1 > g[0] && o.push('-'), o.push(r(g[1]))) } return o.push(']'), o.join('') } function a (e) { for (var t = e.source.match(new RegExp('(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)', 'g')), a = t.length, s = [], l = 0, u = 0; a > l; ++l) { var h = t[l]; if (h === '(')++u; else if (h.charAt(0) === '\\') { var c = +h.substring(1); c && (u >= c ? s[c] = -1 : t[l] = r(c)) } } for (var l = 1; l < s.length; ++l)s[l] === -1 && (s[l] = ++i); for (var l = 0, u = 0; a > l; ++l) { var h = t[l]; if (h === '(')++u, s[u] || (t[l] = '(?:'); else if (h.charAt(0) === '\\') { var c = +h.substring(1); c && u >= c && (t[l] = '\\' + s[c]) } } for (var l = 0; a > l; ++l)t[l] === '^' && t[l + 1] !== '^' && (t[l] = ''); if (e.ignoreCase && o) for (var l = 0; a > l; ++l) { var h = t[l]; const f = h.charAt(0); h.length >= 2 && f === '[' ? t[l] = n(h) : f !== '\\' && (t[l] = h.replace(/[a-zA-Z]/g, function (e) { const t = e.charCodeAt(0); return '[' + String.fromCharCode(-33 & t, 32 | t) + ']' })) } return t.join('') } for (var i = 0, o = !1, s = !1, l = 0, u = e.length; u > l; ++l) { var h = e[l]; if (h.ignoreCase)s = !0; else if (/[a-z]/i.test(h.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi, ''))) { o = !0, s = !1; break } } for (var c = { b: 8, t: 9, n: 10, v: 11, f: 12, r: 13 }, f = [], l = 0, u = e.length; u > l; ++l) { var h = e[l]; if (h.global || h.multiline) throw new Error('' + h); f.push('(?:' + a(h) + ')') } return new RegExp(f.join('|'), s ? 'gi' : 'g') } function t (e, t) { function r (e) { const l = e.nodeType; if (l == 1) { if (n.test(e.className)) return; for (let u = e.firstChild; u; u = u.nextSibling)r(u); const h = e.nodeName.toLowerCase(); (h === 'br' || h === 'li') && (a[s] = '\n', o[s << 1] = i++, o[s++ << 1 | 1] = e) } else if (l == 3 || l == 4) { let c = e.nodeValue; c.length && (c = t ? c.replace(/\r\n?/g, '\n') : c.replace(/[ \t\r\n]+/g, ' '), a[s] = c, o[s << 1] = i, i += c.length, o[s++ << 1 | 1] = e) } } var n = /(?:^|\s)nocode(?:\s|$)/; var a = []; var i = 0; var o = []; var s = 0; return r(e), { sourceCode: a.join('').replace(/\n$/, ''), spans: o } } function r (e, t, r, n) { if (t) { const a = { sourceCode: t, basePos: e }; r(a), n.push.apply(n, a.decorations) } } function n (e) { for (var t = void 0, r = e.firstChild; r; r = r.nextSibling) { const n = r.nodeType; t = n === 1 ? t ? e : r : n === 3 && U.test(r.nodeValue) ? e : t } return t === e ? void 0 : t } function a (t, n) { let a; const i = {}; !(function () { for (var r = t.concat(n), o = [], s = {}, l = 0, u = r.length; u > l; ++l) { const h = r[l]; const c = h[3]; if (c) for (let f = c.length; --f >= 0;)i[c.charAt(f)] = h; const d = h[1]; const g = '' + d; s.hasOwnProperty(g) || (o.push(d), s[g] = null) }o.push(/[\0-\uffff]/), a = e(o) }()); const o = n.length; const s = function (e) { for (var t = e.sourceCode, l = e.basePos, h = [l, D], c = 0, f = t.match(a) || [], d = {}, g = 0, p = f.length; p > g; ++g) { var m; const v = f[g]; let b = d[v]; let y = void 0; if (typeof b === 'string')m = !1; else { let C = i[v.charAt(0)]; if (C)y = v.match(C[1]), b = C[0]; else { for (let w = 0; o > w; ++w) if (C = n[w], y = v.match(C[1])) { b = C[0]; break }y || (b = D) }m = b.length >= 5 && b.substring(0, 5) === 'lang-', !m || y && typeof y[1] === 'string' || (m = !1, b = O), m || (d[v] = b) } const x = c; if (c += v.length, m) { const P = y[1]; let S = v.indexOf(P); let L = S + P.length; y[2] && (L = v.length - y[2].length, S = L - P.length); const T = b.substring(5); r(l + x, v.substring(0, S), s, h), r(l + x + S, P, u(T, P), h), r(l + x + L, v.substring(L), s, h) } else h.push(l + x, b) }e.decorations = h }; return s } function i (e) { const t = []; const r = []; t.push(e.tripleQuotedStrings ? [E, /^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/, null, "'\""] : e.multiLineStrings ? [E, /^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/, null, "'\"`"] : [E, /^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/, null, "\"'"]), e.verbatimStrings && r.push([E, /^@\"(?:[^\"]|\"\")*(?:\"|$)/, null]); const n = e.hashComments; n && (e.cStyleComments ? (t.push(n > 1 ? [$, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#'] : [$, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/, null, '#']), r.push([E, /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/, null])) : t.push([$, /^#[^\r\n]*/, null, '#'])), e.cStyleComments && (r.push([$, /^\/\/[^\r\n]*/, null]), r.push([$, /^\/\*[\s\S]*?(?:\*\/|$)/, null])); const i = e.regexLiterals; if (i) { const o = i > 1 ? '' : '\n\r'; const s = o ? '.' : '[\\S\\s]'; const l = '/(?=[^/*' + o + '])(?:[^/\\x5B\\x5C' + o + ']|\\x5C' + s + '|\\x5B(?:[^\\x5C\\x5D' + o + ']|\\x5C' + s + ')*(?:\\x5D|$))+/'; r.push(['lang-regex', RegExp('^' + j + '(' + l + ')')]) } const u = e.types; u && r.push([R, u]); const h = ('' + e.keywords).replace(/^ | $/g, ''); h.length && r.push([N, new RegExp('^(?:' + h.replace(/[\s,]+/g, '|') + ')\\b'), null]), t.push([D, /^\s+/, null, ' \r\n	 ']); let c = "^.[^\\s\\w.$@'\"`/\\\\]*"; return e.regexLiterals && (c += '(?!s*/)'), r.push([A, /^@[a-z_$][a-z_$@0-9]*/i, null], [R, /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/, null], [D, /^[a-z_$][a-z_$@0-9]*/i, null], [A, new RegExp('^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*', 'i'), null, '0123456789'], [D, /^\\[\s\S]?/, null], [B, new RegExp(c), null]), a(t, r) } function o (e, t, r) { function n (e) { const t = e.nodeType; if (t != 1 || i.test(e.className)) { if ((t == 3 || t == 4) && r) { const l = e.nodeValue; const u = l.match(o); if (u) { const h = l.substring(0, u.index); e.nodeValue = h; const c = l.substring(u.index + u[0].length); if (c) { const f = e.parentNode; f.insertBefore(s.createTextNode(c), e.nextSibling) }a(e), h || e.parentNode.removeChild(e) } } } else if (e.nodeName === 'br')a(e), e.parentNode && e.parentNode.removeChild(e); else for (let d = e.firstChild; d; d = d.nextSibling)n(d) } function a (e) { function t (e, r) { const n = r ? e.cloneNode(!1) : e; const a = e.parentNode; if (a) { const i = t(a, 1); let o = e.nextSibling; i.appendChild(n); for (let s = o; s; s = o)o = s.nextSibling, i.appendChild(s) } return n } for (;!e.nextSibling;) if (e = e.parentNode, !e) return; for (var r, n = t(e.nextSibling, 0); (r = n.parentNode) && r.nodeType === 1;)n = r; u.push(n) } for (var i = /(?:^|\s)nocode(?:\s|$)/, o = /\r\n?|\n/, s = e.ownerDocument, l = s.createElement('li'); e.firstChild;)l.appendChild(e.firstChild); for (var u = [l], h = 0; h < u.length; ++h)n(u[h]); t === (0 | t) && u[0].setAttribute('value', t); const c = s.createElement('ol'); c.className = 'linenums'; for (var f = Math.max(0, t - 1 | 0) || 0, h = 0, d = u.length; d > h; ++h)l = u[h], l.className = 'L' + (h + f) % 10, l.firstChild || l.appendChild(s.createTextNode(' ')), c.appendChild(l); e.appendChild(c) } function s (e) { let t = /\bMSIE\s(\d+)/.exec(navigator.userAgent); t = t && +t[1] <= 8; const r = /\n/g; const n = e.sourceCode; const a = n.length; let i = 0; const o = e.spans; const s = o.length; let l = 0; const u = e.decorations; let h = u.length; let c = 0; u[h] = a; let f, d; for (d = f = 0; h > d;)u[d] !== u[d + 2] ? (u[f++] = u[d++], u[f++] = u[d++]) : d += 2; for (h = f, d = f = 0; h > d;) { for (var g = u[d], p = u[d + 1], m = d + 2; h >= m + 2 && u[m + 1] === p;)m += 2; u[f++] = g, u[f++] = p, d = m }h = u.length = f; let v; const b = e.sourceNode; b && (v = b.style.display, b.style.display = 'none'); try { for (;s > l;) { var y; const C = (o[l], o[l + 2] || a); const w = u[c + 2] || a; var m = Math.min(C, w); let x = o[l + 1]; if (x.nodeType !== 1 && (y = n.substring(i, m))) { t && (y = y.replace(r, '\r')), x.nodeValue = y; const P = x.ownerDocument; const S = P.createElement('span'); S.className = u[c + 1]; const L = x.parentNode; L.replaceChild(S, x), S.appendChild(x), C > i && (o[l + 1] = x = P.createTextNode(n.substring(m, C)), L.insertBefore(x, S.nextSibling)) }i = m, i >= C && (l += 2), i >= w && (c += 2) } } finally { b && (b.style.display = v) } } function l (e, t) { for (let r = t.length; --r >= 0;) { const n = t[r]; F.hasOwnProperty(n) ? d.console && console.warn('cannot override language handler %s', n) : F[n] = e } } function u (e, t) { return e && F.hasOwnProperty(e) || (e = /^\s*</.test(t) ? 'default-markup' : 'default-code'), F[e] } function h (e) { const r = e.langExtension; try { const n = t(e.sourceNode, e.pre); const a = n.sourceCode; e.sourceCode = a, e.spans = n.spans, e.basePos = 0, u(r, a)(e), s(e) } catch (i) { d.console && console.log(i && i.stack || i) } } function c (e, t, r) { let n = document.createElement('div'); n.innerHTML = '<pre>' + e + '</pre>', n = n.firstChild, r && o(n, r, !0); const a = { langExtension: t, numberLines: r, sourceNode: n, pre: 1 }; return h(a), n.innerHTML } function f (e, t) { function r (e) { return i.getElementsByTagName(e) } function a () { for (let t = d.PR_SHOULD_USE_CONTINUATION ? p.now() + 250 : 1 / 0; v < u.length && p.now() < t; v++) { for (var r = u[v], i = S, l = r; l = l.previousSibling;) { const c = l.nodeType; const f = (c === 7 || c === 8) && l.nodeValue; if (f ? !/^\??prettify\b/.test(f) : c !== 3 || /\S/.test(l.nodeValue)) break; if (f) { i = {}, f.replace(/\b(\w+)=([\w:.%+-]+)/g, function (e, t, r) { i[t] = r }); break } } const g = r.className; if ((i !== S || y.test(g)) && !C.test(g)) { for (var L = !1, T = r.parentNode; T; T = T.parentNode) { const _ = T.tagName; if (P.test(_) && T.className && y.test(T.className)) { L = !0; break } } if (!L) { r.className += ' prettyprinted'; let k = i.lang; if (!k) { k = g.match(b); var E; !k && (E = n(r)) && x.test(E.tagName) && (k = E.className.match(b)), k && (k = k[1]) } var N; if (w.test(r.tagName))N = 1; else { const $ = r.currentStyle; const R = s.defaultView; const A = $ ? $.whiteSpace : R && R.getComputedStyle ? R.getComputedStyle(r, null).getPropertyValue('white-space') : 0; N = A && A.substring(0, 3) === 'pre' } let B = i.linenums; (B = B === 'true' || +B) || (B = g.match(/\blinenums\b(?::(\d+))?/), B = B ? B[1] && B[1].length ? +B[1] : !0 : !1), B && o(r, B, N), m = { langExtension: k, sourceNode: r, numberLines: B, pre: N }, h(m) } } }v < u.length ? setTimeout(a, 250) : typeof e === 'function' && e() } for (var i = t || document.body, s = i.ownerDocument || document, l = [r('pre'), r('code'), r('xmp')], u = [], c = 0; c < l.length; ++c) for (let f = 0, g = l[c].length; g > f; ++f)u.push(l[c][f]); l = null; var p = Date; p.now || (p = { now: function () { return +new Date() } }); let m; var v = 0; var b = /\blang(?:uage)?-([\w.]+)(?!\S)/; var y = /\bprettyprint\b/; var C = /\bprettyprinted\b/; var w = /pre|xmp/i; var x = /^code$/i; var P = /^(?:pre|code|xmp)$/i; var S = {}; a() } var d = window; const g = ['break,continue,do,else,for,if,return,while']; const p = [g, 'auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile']; const m = [p, 'catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof']; const v = [m, 'alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where']; const b = [m, 'abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient']; const y = [b, 'as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where']; const C = 'all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes'; const w = [m, 'debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN']; const x = 'caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END'; const P = [g, 'and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None']; const S = [g, 'alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END']; const L = [g, 'as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use']; const T = [g, 'case,done,elif,esac,eval,fi,function,in,local,set,then,until']; const _ = [v, y, w, x, P, S, T]; const k = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/; var E = 'str'; var N = 'kwd'; var $ = 'com'; var R = 'typ'; var A = 'lit'; var B = 'pun'; var D = 'pln'; const I = 'tag'; const M = 'dec'; var O = 'src'; const z = 'atn'; const H = 'atv'; const G = 'nocode'; var j = '(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*'; var U = /\S/; const X = i({ keywords: _, hashComments: !0, cStyleComments: !0, multiLineStrings: !0, regexLiterals: !0 }); var F = {}; l(X, ['default-code']), l(a([], [[D, /^[^<?]+/], [M, /^<!\w[^>]*(?:>|$)/], [$, /^<\!--[\s\S]*?(?:-\->|$)/], ['lang-', /^<\?([\s\S]+?)(?:\?>|$)/], ['lang-', /^<%([\s\S]+?)(?:%>|$)/], [B, /^(?:<[%?]|[%?]>)/], ['lang-', /^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i], ['lang-js', /^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i], ['lang-css', /^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i], ['lang-in.tag', /^(<\/?[a-z][^<>]*>)/i]]), ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']), l(a([[D, /^[\s]+/, null, ' 	\r\n'], [H, /^(?:\"[^\"]*\"?|\'[^\']*\'?)/, null, "\"'"]], [[I, /^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i], [z, /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i], ['lang-uq.val', /^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/], [B, /^[=<>\/]+/], ['lang-js', /^on\w+\s*=\s*\"([^\"]+)\"/i], ['lang-js', /^on\w+\s*=\s*\'([^\']+)\'/i], ['lang-js', /^on\w+\s*=\s*([^\"\'>\s]+)/i], ['lang-css', /^style\s*=\s*\"([^\"]+)\"/i], ['lang-css', /^style\s*=\s*\'([^\']+)\'/i], ['lang-css', /^style\s*=\s*([^\"\'>\s]+)/i]]), ['in.tag']), l(a([], [[H, /^[\s\S]+/]]), ['uq.val']), l(i({ keywords: v, hashComments: !0, cStyleComments: !0, types: k }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']), l(i({ keywords: 'null,true,false' }), ['json']), l(i({ keywords: y, hashComments: !0, cStyleComments: !0, verbatimStrings: !0, types: k }), ['cs']), l(i({ keywords: b, cStyleComments: !0 }), ['java']), l(i({ keywords: T, hashComments: !0, multiLineStrings: !0 }), ['bash', 'bsh', 'csh', 'sh']), l(i({ keywords: P, hashComments: !0, multiLineStrings: !0, tripleQuotedStrings: !0 }), ['cv', 'py', 'python']), l(i({ keywords: x, hashComments: !0, multiLineStrings: !0, regexLiterals: 2 }), ['perl', 'pl', 'pm']), l(i({ keywords: S, hashComments: !0, multiLineStrings: !0, regexLiterals: !0 }), ['rb', 'ruby']), l(i({ keywords: w, cStyleComments: !0, regexLiterals: !0 }), ['javascript', 'js']), l(i({ keywords: C, hashComments: 3, cStyleComments: !0, multilineStrings: !0, tripleQuotedStrings: !0, regexLiterals: !0 }), ['coffee']), l(i({ keywords: L, cStyleComments: !0, multilineStrings: !0 }), ['rc', 'rs', 'rust']), l(a([], [[E, /^[\s\S]+/]]), ['regex']); const K = d.PR = { createSimpleLexer: a, registerLangHandler: l, sourceDecorator: i, PR_ATTRIB_NAME: z, PR_ATTRIB_VALUE: H, PR_COMMENT: $, PR_DECLARATION: M, PR_KEYWORD: N, PR_LITERAL: A, PR_NOCODE: G, PR_PLAIN: D, PR_PUNCTUATION: B, PR_SOURCE: O, PR_STRING: E, PR_TAG: I, PR_TYPE: R, prettyPrintOne: IN_GLOBAL_SCOPE ? d.prettyPrintOne = c : prettyPrintOne = c, prettyPrint: prettyPrint = IN_GLOBAL_SCOPE ? d.prettyPrint = f : prettyPrint = f }; typeof define === 'function' && define.amd && define('google-code-prettify', [], function () { return K }) }()), PR.registerLangHandler(PR.createSimpleLexer([[PR.PR_PLAIN, /^[ \t\r\n\f]+/, null, ' 	\r\n\f']], [[PR.PR_STRING, /^\"(?:[^\n\r\f\\\"]|\\(?:\r\n?|\n|\f)|\\[\s\S])*\"/, null], [PR.PR_STRING, /^\'(?:[^\n\r\f\\\']|\\(?:\r\n?|\n|\f)|\\[\s\S])*\'/, null], ['lang-css-str', /^url\(([^\)\"\']+)\)/i], [PR.PR_KEYWORD, /^(?:url|rgb|\!important|@import|@page|@media|@charset|inherit)(?=[^\-\w]|$)/i, null], ['lang-css-kw', /^(-?(?:[_a-z]|(?:\\[0-9a-f]+ ?))(?:[_a-z0-9\-]|\\(?:\\[0-9a-f]+ ?))*)\s*:/i], [PR.PR_COMMENT, /^\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//], [PR.PR_COMMENT, /^(?:<!--|-->)/], [PR.PR_LITERAL, /^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i], [PR.PR_LITERAL, /^#(?:[0-9a-f]{3}){1,2}\b/i], [PR.PR_PLAIN, /^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i], [PR.PR_PUNCTUATION, /^[^\s\w\'\"]+/]]), ['css']), PR.registerLangHandler(PR.createSimpleLexer([], [[PR.PR_KEYWORD, /^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i]]), ['css-kw']), PR.registerLangHandler(PR.createSimpleLexer([], [[PR.PR_STRING, /^[^\)\"\']+/]]), ['css-str']), (function (e) {
  e.fn.qrcode = function (t) {
    function r (e) { this.mode = s, this.data = e } function n (e, t) { this.typeNumber = e, this.errorCorrectLevel = t, this.modules = null, this.moduleCount = 0, this.dataCache = null, this.dataList = [] } function a (e, t) { if (void 0 == e.length) throw Error(e.length + '/' + t); for (var r = 0; r < e.length && e[r] == 0;)r++; this.num = Array(e.length - r + t); for (let n = 0; n < e.length - r; n++) this.num[n] = e[n + r] } function i (e, t) { this.totalCount = e, this.dataCount = t } function o () { this.buffer = [], this.length = 0 } let s; r.prototype = { getLength: function () { return this.data.length }, write: function (e) { for (let t = 0; t < this.data.length; t++)e.put(this.data.charCodeAt(t), 8) } }, n.prototype = { addData: function (e) { this.dataList.push(new r(e)), this.dataCache = null }, isDark: function (e, t) { if (e < 0 || this.moduleCount <= e || t < 0 || this.moduleCount <= t) throw Error(e + ',' + t); return this.modules[e][t] }, getModuleCount: function () { return this.moduleCount }, make: function () { if (this.typeNumber < 1) { for (var e = 1, e = 1; e < 40; e++) { for (var t = i.getRSBlocks(e, this.errorCorrectLevel), r = new o(), n = 0, a = 0; a < t.length; a++)n += t[a].dataCount; for (a = 0; a < this.dataList.length; a++)t = this.dataList[a], r.put(t.mode, 4), r.put(t.getLength(), l.getLengthInBits(t.mode, e)), t.write(r); if (r.getLengthInBits() <= 8 * n) break } this.typeNumber = e } this.makeImpl(!1, this.getBestMaskPattern()) }, makeImpl: function (e, t) { this.moduleCount = 4 * this.typeNumber + 17, this.modules = Array(this.moduleCount); for (let r = 0; r < this.moduleCount; r++) { this.modules[r] = Array(this.moduleCount); for (let a = 0; a < this.moduleCount; a++) this.modules[r][a] = null } this.setupPositionProbePattern(0, 0), this.setupPositionProbePattern(this.moduleCount - 7, 0), this.setupPositionProbePattern(0, this.moduleCount - 7), this.setupPositionAdjustPattern(), this.setupTimingPattern(), this.setupTypeInfo(e, t), this.typeNumber >= 7 && this.setupTypeNumber(e), this.dataCache == null && (this.dataCache = n.createData(this.typeNumber, this.errorCorrectLevel, this.dataList)), this.mapData(this.dataCache, t) }, setupPositionProbePattern: function (e, t) { for (let r = -1; r <= 7; r++) if (!(e + r <= -1 || this.moduleCount <= e + r)) for (let n = -1; n <= 7; n++)t + n <= -1 || this.moduleCount <= t + n || (this.modules[e + r][t + n] = r >= 0 && r <= 6 && (n == 0 || n == 6) || n >= 0 && n <= 6 && (r == 0 || r == 6) || r >= 2 && r <= 4 && n >= 2 && n <= 4 ? !0 : !1) }, getBestMaskPattern: function () { for (var e = 0, t = 0, r = 0; r < 8; r++) { this.makeImpl(!0, r); const n = l.getLostPoint(this); (r == 0 || e > n) && (e = n, t = r) } return t }, createMovieClip: function (e, t, r) { for (e = e.createEmptyMovieClip(t, r), this.make(), t = 0; t < this.modules.length; t++) for (var r = 1 * t, n = 0; n < this.modules[t].length; n++) { const a = 1 * n; this.modules[t][n] && (e.beginFill(0, 100), e.moveTo(a, r), e.lineTo(a + 1, r), e.lineTo(a + 1, r + 1), e.lineTo(a, r + 1), e.endFill()) } return e }, setupTimingPattern: function () { for (var e = 8; e < this.moduleCount - 8; e++) this.modules[e][6] == null && (this.modules[e][6] = e % 2 == 0); for (e = 8; e < this.moduleCount - 8; e++) this.modules[6][e] == null && (this.modules[6][e] = e % 2 == 0) }, setupPositionAdjustPattern: function () { for (let e = l.getPatternPosition(this.typeNumber), t = 0; t < e.length; t++) for (let r = 0; r < e.length; r++) { const n = e[t]; const a = e[r]; if (this.modules[n][a] == null) for (let i = -2; i <= 2; i++) for (let o = -2; o <= 2; o++) this.modules[n + i][a + o] = i == -2 || i == 2 || o == -2 || o == 2 || i == 0 && o == 0 ? !0 : !1 } }, setupTypeNumber: function (e) { for (var t = l.getBCHTypeNumber(this.typeNumber), r = 0; r < 18; r++) { var n = !e && (t >> r & 1) == 1; this.modules[Math.floor(r / 3)][r % 3 + this.moduleCount - 8 - 3] = n } for (r = 0; r < 18; r++)n = !e && (t >> r & 1) == 1, this.modules[r % 3 + this.moduleCount - 8 - 3][Math.floor(r / 3)] = n }, setupTypeInfo: function (e, t) { for (var r = l.getBCHTypeInfo(this.errorCorrectLevel << 3 | t), n = 0; n < 15; n++) { var a = !e && (r >> n & 1) == 1; n < 6 ? this.modules[n][8] = a : n < 8 ? this.modules[n + 1][8] = a : this.modules[this.moduleCount - 15 + n][8] = a } for (n = 0; n < 15; n++)a = !e && (r >> n & 1) == 1, n < 8 ? this.modules[8][this.moduleCount - n - 1] = a : n < 9 ? this.modules[8][15 - n - 1 + 1] = a : this.modules[8][15 - n - 1] = a; this.modules[this.moduleCount - 8][8] = !e }, mapData: function (e, t) { for (let r = -1, n = this.moduleCount - 1, a = 7, i = 0, o = this.moduleCount - 1; o > 0; o -= 2) for (o == 6 && o--; ;) { for (let s = 0; s < 2; s++) if (this.modules[n][o - s] == null) { let u = !1; i < e.length && (u = (e[i] >>> a & 1) == 1), l.getMask(t, n, o - s) && (u = !u), this.modules[n][o - s] = u, a--, a == -1 && (i++, a = 7) } if (n += r, n < 0 || this.moduleCount <= n) { n -= r, r = -r; break } } } }, n.PAD0 = 236, n.PAD1 = 17, n.createData = function (e, t, r) { for (var t = i.getRSBlocks(e, t), a = new o(), s = 0; s < r.length; s++) { const u = r[s]; a.put(u.mode, 4), a.put(u.getLength(), l.getLengthInBits(u.mode, e)), u.write(a) } for (s = e = 0; s < t.length; s++)e += t[s].dataCount; if (a.getLengthInBits() > 8 * e) throw Error('code length overflow. (' + a.getLengthInBits() + '>' + 8 * e + ')'); for (a.getLengthInBits() + 4 <= 8 * e && a.put(0, 4); a.getLengthInBits() % 8 != 0;)a.putBit(!1); for (;!(a.getLengthInBits() >= 8 * e) && (a.put(n.PAD0, 8), !(a.getLengthInBits() >= 8 * e));)a.put(n.PAD1, 8); return n.createBytes(a, t) }, n.createBytes = function (e, t) { for (var r = 0, n = 0, i = 0, o = Array(t.length), s = Array(t.length), u = 0; u < t.length; u++) { var h = t[u].dataCount; let c = t[u].totalCount - h; var n = Math.max(n, h); var i = Math.max(i, c); o[u] = Array(h); for (var f = 0; f < o[u].length; f++)o[u][f] = 255 & e.buffer[f + r]; for (r += h, f = l.getErrorCorrectPolynomial(c), h = new a(o[u], f.getLength() - 1).mod(f), s[u] = Array(f.getLength() - 1), f = 0; f < s[u].length; f++)c = f + h.getLength() - s[u].length, s[u][f] = c >= 0 ? h.get(c) : 0 } for (f = u = 0; f < t.length; f++)u += t[f].totalCount; for (r = Array(u), f = h = 0; n > f; f++) for (u = 0; u < t.length; u++)f < o[u].length && (r[h++] = o[u][f]); for (f = 0; i > f; f++) for (u = 0; u < t.length; u++)f < s[u].length && (r[h++] = s[u][f]); return r }, s = 4; for (var l = { PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]], G15: 1335, G18: 7973, G15_MASK: 21522, getBCHTypeInfo: function (e) { for (var t = e << 10; l.getBCHDigit(t) - l.getBCHDigit(l.G15) >= 0;)t ^= l.G15 << l.getBCHDigit(t) - l.getBCHDigit(l.G15); return (e << 10 | t) ^ l.G15_MASK }, getBCHTypeNumber: function (e) { for (var t = e << 12; l.getBCHDigit(t) - l.getBCHDigit(l.G18) >= 0;)t ^= l.G18 << l.getBCHDigit(t) - l.getBCHDigit(l.G18); return e << 12 | t }, getBCHDigit: function (e) { for (var t = 0; e != 0;)t++, e >>>= 1; return t }, getPatternPosition: function (e) { return l.PATTERN_POSITION_TABLE[e - 1] }, getMask: function (e, t, r) { switch (e) { case 0:return (t + r) % 2 == 0; case 1:return t % 2 == 0; case 2:return r % 3 == 0; case 3:return (t + r) % 3 == 0; case 4:return (Math.floor(t / 2) + Math.floor(r / 3)) % 2 == 0; case 5:return t * r % 2 + t * r % 3 == 0; case 6:return (t * r % 2 + t * r % 3) % 2 == 0; case 7:return (t * r % 3 + (t + r) % 2) % 2 == 0; default:throw Error('bad maskPattern:' + e) } }, getErrorCorrectPolynomial: function (e) { for (var t = new a([1], 0), r = 0; e > r; r++)t = t.multiply(new a([1, u.gexp(r)], 0)); return t }, getLengthInBits: function (e, t) { if (t >= 1 && t < 10) switch (e) { case 1:return 10; case 2:return 9; case s:return 8; case 8:return 8; default:throw Error('mode:' + e) } else if (t < 27) switch (e) { case 1:return 12; case 2:return 11; case s:return 16; case 8:return 10; default:throw Error('mode:' + e) } else { if (!(t < 41)) throw Error('type:' + t); switch (e) { case 1:return 14; case 2:return 13; case s:return 16; case 8:return 12; default:throw Error('mode:' + e) } } }, getLostPoint: function (e) { for (var t = e.getModuleCount(), r = 0, n = 0; t > n; n++) for (var a = 0; t > a; a++) { for (var i = 0, o = e.isDark(n, a), s = -1; s <= 1; s++) if (!(n + s < 0 || n + s >= t)) for (let l = -1; l <= 1; l++)a + l < 0 || a + l >= t || s == 0 && l == 0 || o == e.isDark(n + s, a + l) && i++; i > 5 && (r += 3 + i - 5) } for (n = 0; t - 1 > n; n++) for (a = 0; t - 1 > a; a++)i = 0, e.isDark(n, a) && i++, e.isDark(n + 1, a) && i++, e.isDark(n, a + 1) && i++, e.isDark(n + 1, a + 1) && i++, (i == 0 || i == 4) && (r += 3); for (n = 0; t > n; n++) for (a = 0; t - 6 > a; a++)e.isDark(n, a) && !e.isDark(n, a + 1) && e.isDark(n, a + 2) && e.isDark(n, a + 3) && e.isDark(n, a + 4) && !e.isDark(n, a + 5) && e.isDark(n, a + 6) && (r += 40); for (a = 0; t > a; a++) for (n = 0; t - 6 > n; n++)e.isDark(n, a) && !e.isDark(n + 1, a) && e.isDark(n + 2, a) && e.isDark(n + 3, a) && e.isDark(n + 4, a) && !e.isDark(n + 5, a) && e.isDark(n + 6, a) && (r += 40); for (a = i = 0; t > a; a++) for (n = 0; t > n; n++)e.isDark(n, a) && i++; return e = Math.abs(100 * i / t / t - 50) / 5, r + 10 * e } }, u = { glog: function (e) { if (e < 1) throw Error('glog(' + e + ')'); return u.LOG_TABLE[e] }, gexp: function (e) { for (;e < 0;)e += 255; for (;e >= 256;)e -= 255; return u.EXP_TABLE[e] }, EXP_TABLE: Array(256), LOG_TABLE: Array(256) }, h = 0; h < 8; h++)u.EXP_TABLE[h] = 1 << h; for (h = 8; h < 256; h++)u.EXP_TABLE[h] = u.EXP_TABLE[h - 4] ^ u.EXP_TABLE[h - 5] ^ u.EXP_TABLE[h - 6] ^ u.EXP_TABLE[h - 8]; for (h = 0; h < 255; h++)u.LOG_TABLE[u.EXP_TABLE[h]] = h; return a.prototype = { get: function (e) { return this.num[e] }, getLength: function () { return this.num.length }, multiply: function (e) { for (var t = Array(this.getLength() + e.getLength() - 1), r = 0; r < this.getLength(); r++) for (let n = 0; n < e.getLength(); n++)t[r + n] ^= u.gexp(u.glog(this.get(r)) + u.glog(e.get(n))); return new a(t, 0) }, mod: function (e) { if (this.getLength() - e.getLength() < 0) return this; for (var t = u.glog(this.get(0)) - u.glog(e.get(0)), r = Array(this.getLength()), n = 0; n < this.getLength(); n++)r[n] = this.get(n); for (n = 0; n < e.getLength(); n++)r[n] ^= u.gexp(u.glog(e.get(n)) + t); return new a(r, 0).mod(e) } }, i.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]],
    i.getRSBlocks = function (e, t) { const r = i.getRsBlockTable(e, t); if (void 0 == r) throw Error('bad rs block @ typeNumber:' + e + '/errorCorrectLevel:' + t); for (var n = r.length / 3, a = [], o = 0; n > o; o++) for (let s = r[3 * o + 0], l = r[3 * o + 1], u = r[3 * o + 2], h = 0; s > h; h++)a.push(new i(l, u)); return a }, i.getRsBlockTable = function (e, t) { switch (t) { case 1:return i.RS_BLOCK_TABLE[4 * (e - 1) + 0]; case 0:return i.RS_BLOCK_TABLE[4 * (e - 1) + 1]; case 3:return i.RS_BLOCK_TABLE[4 * (e - 1) + 2]; case 2:return i.RS_BLOCK_TABLE[4 * (e - 1) + 3] } }, o.prototype = { get: function (e) { return (this.buffer[Math.floor(e / 8)] >>> 7 - e % 8 & 1) == 1 }, put: function (e, t) { for (let r = 0; t > r; r++) this.putBit((e >>> t - r - 1 & 1) == 1) }, getLengthInBits: function () { return this.length }, putBit: function (e) { const t = Math.floor(this.length / 8); this.buffer.length <= t && this.buffer.push(0), e && (this.buffer[t] |= 128 >>> this.length % 8), this.length++ } }, typeof t === 'string' && (t = { text: t }), t = e.extend({}, { render: 'canvas', width: 256, height: 256, typeNumber: -1, correctLevel: 2, background: '#ffffff', foreground: '#000000' }, t), this.each(function () { let r; if (t.render == 'canvas') { r = new n(t.typeNumber, t.correctLevel), r.addData(t.text), r.make(); var a = document.createElement('canvas'); a.width = t.width, a.height = t.height; for (var i = a.getContext('2d'), o = t.width / r.getModuleCount(), s = t.height / r.getModuleCount(), l = 0; l < r.getModuleCount(); l++) for (var u = 0; u < r.getModuleCount(); u++) { i.fillStyle = r.isDark(l, u) ? t.foreground : t.background; const h = Math.ceil((u + 1) * o) - Math.floor(u * o); const c = Math.ceil((l + 1) * o) - Math.floor(l * o); i.fillRect(Math.round(u * o), Math.round(l * s), h, c) } } else for (r = new n(t.typeNumber, t.correctLevel), r.addData(t.text), r.make(), a = e('<table></table>').css('width', t.width + 'px').css('height', t.height + 'px').css('border', '0px').css('border-collapse', 'collapse').css('background-color', t.background), i = t.width / r.getModuleCount(), o = t.height / r.getModuleCount(), s = 0; s < r.getModuleCount(); s++) for (l = e('<tr></tr>').css('height', o + 'px').appendTo(a), u = 0; u < r.getModuleCount(); u++)e('<td></td>').css('width', i + 'px').css('background-color', r.isDark(s, u) ? t.foreground : t.background).appendTo(l); r = a, $(r).appendTo(this) })
  }
}($))
